// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.qq.tars.quickstart.server.testapp;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TestInfo {

	@TarsStructProperty(order = 0, isRequire = false)
	public byte c = 1;
	@TarsStructProperty(order = 1, isRequire = false)
	public short i1 = 2;
	@TarsStructProperty(order = 2, isRequire = false)
	public int i2 = 3;
	@TarsStructProperty(order = 3, isRequire = false)
	public long l = 4L;
	@TarsStructProperty(order = 4, isRequire = false)
	public float f = 5.0F;
	@TarsStructProperty(order = 5, isRequire = false)
	public double d = 6.1D;
	@TarsStructProperty(order = 6, isRequire = false)
	public String s = "test";
	@TarsStructProperty(order = 7, isRequire = false)
	public java.util.List<String> vs = null;
	@TarsStructProperty(order = 8, isRequire = false)
	public java.util.Map<java.lang.Integer, String> ms = null;
	@TarsStructProperty(order = 9, isRequire = false)
	public java.util.List<java.lang.Double> vd = null;
	@TarsStructProperty(order = 10, isRequire = false)
	public java.util.Map<java.lang.Float, java.lang.Double> mfd = null;
	@TarsStructProperty(order = 11, isRequire = false)
	public int et = 0;
	@TarsStructProperty(order = 12, isRequire = false)
	public boolean b = true;
	@TarsStructProperty(order = 13, isRequire = false)
	public boolean is = false;
	@TarsStructProperty(order = 14, isRequire = false)
	public boolean isBool = true;
	@TarsStructProperty(order = 15, isRequire = false)
	public boolean isbool = false;
	@TarsStructProperty(order = 16, isRequire = true)
	public String rstr = "";

	public byte getC() {
		return c;
	}

	public void setC(byte c) {
		this.c = c;
	}

	public short getI1() {
		return i1;
	}

	public void setI1(short i1) {
		this.i1 = i1;
	}

	public int getI2() {
		return i2;
	}

	public void setI2(int i2) {
		this.i2 = i2;
	}

	public long getL() {
		return l;
	}

	public void setL(long l) {
		this.l = l;
	}

	public float getF() {
		return f;
	}

	public void setF(float f) {
		this.f = f;
	}

	public double getD() {
		return d;
	}

	public void setD(double d) {
		this.d = d;
	}

	public String getS() {
		return s;
	}

	public void setS(String s) {
		this.s = s;
	}

	public java.util.List<String> getVs() {
		return vs;
	}

	public void setVs(java.util.List<String> vs) {
		this.vs = vs;
	}

	public java.util.Map<java.lang.Integer, String> getMs() {
		return ms;
	}

	public void setMs(java.util.Map<java.lang.Integer, String> ms) {
		this.ms = ms;
	}

	public java.util.List<java.lang.Double> getVd() {
		return vd;
	}

	public void setVd(java.util.List<java.lang.Double> vd) {
		this.vd = vd;
	}

	public java.util.Map<java.lang.Float, java.lang.Double> getMfd() {
		return mfd;
	}

	public void setMfd(java.util.Map<java.lang.Float, java.lang.Double> mfd) {
		this.mfd = mfd;
	}

	public int getEt() {
		return et;
	}

	public void setEt(int et) {
		this.et = et;
	}

	public boolean isB() {
		return b;
	}

	public void setB(boolean b) {
		this.b = b;
	}

	public boolean isIs() {
		return is;
	}

	public void setIs(boolean is) {
		this.is = is;
	}

	public boolean isBool() {
		return isBool;
	}

	public void setBool(boolean isBool) {
		this.isBool = isBool;
	}

	public boolean isIsbool() {
		return isbool;
	}

	public void setIsbool(boolean isbool) {
		this.isbool = isbool;
	}

	public String getRstr() {
		return rstr;
	}

	public void setRstr(String rstr) {
		this.rstr = rstr;
	}

	public TestInfo() {
	}

	public TestInfo(byte c, short i1, int i2, long l, float f, double d, String s, java.util.List<String> vs, java.util.Map<java.lang.Integer, String> ms, java.util.List<java.lang.Double> vd, java.util.Map<java.lang.Float, java.lang.Double> mfd, int et, boolean b, boolean is, boolean isBool, boolean isbool, String rstr) {
		this.c = c;
		this.i1 = i1;
		this.i2 = i2;
		this.l = l;
		this.f = f;
		this.d = d;
		this.s = s;
		this.vs = vs;
		this.ms = ms;
		this.vd = vd;
		this.mfd = mfd;
		this.et = et;
		this.b = b;
		this.is = is;
		this.isBool = isBool;
		this.isbool = isbool;
		this.rstr = rstr;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(c);
		result = prime * result + TarsUtil.hashCode(i1);
		result = prime * result + TarsUtil.hashCode(i2);
		result = prime * result + TarsUtil.hashCode(l);
		result = prime * result + TarsUtil.hashCode(f);
		result = prime * result + TarsUtil.hashCode(d);
		result = prime * result + TarsUtil.hashCode(s);
		result = prime * result + TarsUtil.hashCode(vs);
		result = prime * result + TarsUtil.hashCode(ms);
		result = prime * result + TarsUtil.hashCode(vd);
		result = prime * result + TarsUtil.hashCode(mfd);
		result = prime * result + TarsUtil.hashCode(et);
		result = prime * result + TarsUtil.hashCode(b);
		result = prime * result + TarsUtil.hashCode(is);
		result = prime * result + TarsUtil.hashCode(isBool);
		result = prime * result + TarsUtil.hashCode(isbool);
		result = prime * result + TarsUtil.hashCode(rstr);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TestInfo)) {
			return false;
		}
		TestInfo other = (TestInfo) obj;
		return (
			TarsUtil.equals(c, other.c) &&
			TarsUtil.equals(i1, other.i1) &&
			TarsUtil.equals(i2, other.i2) &&
			TarsUtil.equals(l, other.l) &&
			TarsUtil.equals(f, other.f) &&
			TarsUtil.equals(d, other.d) &&
			TarsUtil.equals(s, other.s) &&
			TarsUtil.equals(vs, other.vs) &&
			TarsUtil.equals(ms, other.ms) &&
			TarsUtil.equals(vd, other.vd) &&
			TarsUtil.equals(mfd, other.mfd) &&
			TarsUtil.equals(et, other.et) &&
			TarsUtil.equals(b, other.b) &&
			TarsUtil.equals(is, other.is) &&
			TarsUtil.equals(isBool, other.isBool) &&
			TarsUtil.equals(isbool, other.isbool) &&
			TarsUtil.equals(rstr, other.rstr) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(c, 0);
		_os.write(i1, 1);
		_os.write(i2, 2);
		_os.write(l, 3);
		_os.write(f, 4);
		_os.write(d, 5);
		if (null != s) {
			_os.write(s, 6);
		}
		if (null != vs) {
			_os.write(vs, 7);
		}
		if (null != ms) {
			_os.write(ms, 8);
		}
		if (null != vd) {
			_os.write(vd, 9);
		}
		if (null != mfd) {
			_os.write(mfd, 10);
		}
		_os.write(et, 11);
		_os.write(b, 12);
		_os.write(is, 13);
		_os.write(isBool, 14);
		_os.write(isbool, 15);
		_os.write(rstr, 16);
	}

	static java.util.List<String> cache_vs;
	static { 
		cache_vs = new java.util.ArrayList<String>();
		String var_1 = "";
		cache_vs.add(var_1);
	}
	static java.util.Map<java.lang.Integer, String> cache_ms;
	static { 
		cache_ms = new java.util.HashMap<java.lang.Integer, String>();
		int var_2 = 0;
		String var_3 = "";
		cache_ms.put(var_2 ,var_3);
	}
	static java.util.List<java.lang.Double> cache_vd;
	static { 
		cache_vd = new java.util.ArrayList<java.lang.Double>();
		double var_4 = 0D;
		cache_vd.add(var_4);
	}
	static java.util.Map<java.lang.Float, java.lang.Double> cache_mfd;
	static { 
		cache_mfd = new java.util.HashMap<java.lang.Float, java.lang.Double>();
		float var_5 = 0F;
		double var_6 = 0D;
		cache_mfd.put(var_5 ,var_6);
	}

	public void readFrom(TarsInputStream _is) {
		this.c = _is.read(c, 0, false);
		this.i1 = _is.read(i1, 1, false);
		this.i2 = _is.read(i2, 2, false);
		this.l = _is.read(l, 3, false);
		this.f = _is.read(f, 4, false);
		this.d = _is.read(d, 5, false);
		this.s = _is.readString(6, false);
		this.vs = (java.util.List<String>) _is.read(cache_vs, 7, false);
		this.ms = (java.util.Map<java.lang.Integer, String>) _is.read(cache_ms, 8, false);
		this.vd = (java.util.List<java.lang.Double>) _is.read(cache_vd, 9, false);
		this.mfd = (java.util.Map<java.lang.Float, java.lang.Double>) _is.read(cache_mfd, 10, false);
		this.et = _is.read(et, 11, false);
		this.b = _is.read(b, 12, false);
		this.is = _is.read(is, 13, false);
		this.isBool = _is.read(isBool, 14, false);
		this.isbool = _is.read(isbool, 15, false);
		this.rstr = _is.readString(16, true);
	}

}
